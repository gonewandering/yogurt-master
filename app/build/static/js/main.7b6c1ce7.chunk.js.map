{"version":3,"sources":["Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","props","active","config","toggleActive","toggle","btn","className","href","tabindex","onClick","stub","App","state","bind","$","get","data","this","setState","ajax","type","url","dataType","style","marginTop","Math","round","temperature","temp","humidity","react","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAAe,SAASA,EAAYC,GAClC,IAAIC,EAASD,EAAME,OAAOD,SAAU,EAChCE,EAAeH,EAAMI,OAErBC,EACF,mBAAGC,UAAU,oBAAoBC,KAAK,IAAIC,SAAS,KAAKC,QAAUN,EAAlE,oBASF,OANIF,IACFI,EACE,mBAAGC,UAAU,oBAAoBC,KAAK,IAAIC,SAAS,KAAKC,QAAUN,EAAlE,sBAKF,qBAAKG,UAAU,gCAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,+BAIA,oBAAID,UAAU,yCAAd,SACE,oBAAIA,UAAU,WAAd,SACID,W,oBClBRK,EAAO,CACT,SAAY,mBACZ,YAAe,mBACf,OAAU,CACN,OAAU,CACN,QAAW,KAEf,KAAQ,CACJ,IACA,KAEJ,OAAU,CACN,MAAS,GACT,IAAO,GAEX,QAAU,IAqDHC,E,kDAhDb,aAAe,IAAD,8BACZ,gBAEKC,MAAQF,EAEb,EAAKP,aAAe,EAAKA,aAAaU,KAAlB,gBALR,E,gMASKC,IAAEC,IAAI,Q,OAEH,kBAFhBC,E,SAGFC,KAAKC,SAASF,G,oQAKZf,GAAUgB,KAAKL,MAAMV,OAAOD,O,SAEfa,IAAEK,KAAK,CACtBC,KAAM,OACNC,IAAI,OACJL,KAAM,CAAEf,UACRqB,SAAU,S,OAJRN,E,OAOJC,KAAKC,SAASF,G,qIAId,OACE,sBAAKV,UAAU,MAAf,UACE,cAAC,EAAD,CAAKJ,OAASe,KAAKL,MAAMV,OAASE,OAASa,KAAKd,eAChD,sBAAKG,UAAU,MAAMiB,MAAQ,CAACC,UAAW,IAAzC,UACE,sBAAKlB,UAAU,QAAf,UACE,+BAAMmB,KAAKC,MAA+B,IAAzBT,KAAKL,MAAMe,aAAqB,IAAjD,UACA,+CAAmBV,KAAKL,MAAMV,OAAO0B,KAAK,GAA1C,QAAkDX,KAAKL,MAAMV,OAAO0B,KAAK,GAAzE,cAEF,sBAAKtB,UAAU,QAAf,UACE,+BAAMmB,KAAKC,MAA4B,IAAtBT,KAAKL,MAAMiB,UAAkB,IAA9C,OACA,uD,GAzCMC,IAAMC,WCZTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7b6c1ce7.chunk.js","sourcesContent":["export default function Navigation (props) {\n  let active = props.config.active || true\n  let toggleActive = props.toggle\n\n  let btn = (\n    <a className=\"btn-sm bg-success\" href=\"#\" tabindex=\"-1\" onClick={ toggleActive }>Enable</a>\n  )\n\n  if (active) {\n    btn = (\n      <a className=\"btn-sm bg-warning\" href=\"#\" tabindex=\"-1\" onClick={ toggleActive }>Disable</a>\n    )\n  }\n\n  return (\n    <nav className=\"navbar navbar-dark bg-primary\">\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"#\">\n          YogurtMaster 6000\n        </a>\n\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 d-flex\">\n          <li className=\"nav-item\">\n            { btn }\n          </li>\n        </ul>\n      </div>\n    </nav>\n  )\n}\n","import './App.css';\nimport Nav from './Nav.js'\nimport react from 'react';\nimport $ from 'jquery';\n\nconst stub = {\n    \"humidity\": 42.400001525878906,\n    \"temperature\": 100.93999862670898,\n    \"config\": {\n        \"client\": {\n            \"timeout\": 5000\n        },\n        \"temp\": [\n            100,\n            105\n        ],\n        \"sensor\": {\n            \"model\": 22,\n            \"pin\": 4\n        },\n        \"active\": false\n    }\n}\n\nclass App extends react.Component {\n  constructor() {\n    super()\n\n    this.state = stub\n\n    this.toggleActive = this.toggleActive.bind(this)\n  }\n\n  async componentDidMount() {\n    let data = await $.get('/api')\n\n    if (typeof data === 'object') {\n      this.setState(data)\n    }\n  }\n\n  async toggleActive() {\n    let active = !this.state.config.active\n\n    let data = await $.ajax({\n      type: \"POST\",\n      url: `/api`,\n      data: { active },\n      dataType: 'json'\n    })\n\n    this.setState(data)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav config={ this.state.config } toggle={ this.toggleActive } />\n        <div className=\"row\" style={ {marginTop: 60 }}>\n          <div className=\"col-6\">\n            <h1>{ Math.round(this.state.temperature * 100) / 100 }°</h1>\n            <h3>Temperature ({ this.state.config.temp[0] }°-{ this.state.config.temp[1] }°)</h3>\n          </div>\n          <div className=\"col-6\">\n            <h1>{ Math.round(this.state.humidity * 100) / 100 }%</h1>\n            <h3>Humidity</h3>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}